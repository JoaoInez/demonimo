{"version":3,"sources":["webpack:///./src/templates/index.js"],"names":["Index","data","location","pageContext","allPosts","allGhostPost","edges","featuredPost","find","node","featured","posts","filter","post","id","isHome","className","key","map","pageQuery"],"mappings":"4FAAA,kGAuDeA,UAxCD,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACzBC,EAAWH,EAAKI,aAAaC,MAC7BC,EAAeH,EAASI,MAAK,qBAAGC,KAAgBC,YAChDC,EAAQP,EAASQ,QACrB,SAACC,GAAD,OAAUA,EAAKJ,KAAKK,KAAOP,EAAaE,KAAKK,MAG/C,OACE,oCACE,kBAAC,IAAD,CAAUZ,SAAUA,IACpB,kBAAC,IAAD,CAAQa,QAAQ,GACd,yBAAKC,UAAU,aACb,6BAASA,UAAU,aACjB,kBAAC,IAAD,CACEC,IAAKV,EAAaE,KAAKK,GACvBD,KAAMN,EAAaE,KACnBC,UAAU,IAEXC,EAAMO,KAAI,gBAAGT,EAAH,EAAGA,KAAH,OAET,kBAAC,IAAD,CAAUQ,IAAKR,EAAKK,GAAID,KAAMJ,QAGlC,kBAAC,IAAD,CAAYN,YAAaA,QAqB5B,IAAMgB,EAAS","file":"component---src-templates-index-js-ee0fb034a8ef32041069.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\n\nimport { Layout, PostCard, Pagination } from \"../components/common\";\nimport { MetaData } from \"../components/common/meta\";\n\n/**\n * Main index page (home page)\n *\n * Loads all posts from Ghost and uses pagination to navigate through them.\n * The number of posts that should appear per page can be setup\n * in /utils/siteConfig.js under `postsPerPage`.\n *\n */\nconst Index = ({ data, location, pageContext }) => {\n  const allPosts = data.allGhostPost.edges;\n  const featuredPost = allPosts.find(({ node }) => node.featured);\n  const posts = allPosts.filter(\n    (post) => post.node.id !== featuredPost.node.id\n  );\n\n  return (\n    <>\n      <MetaData location={location} />\n      <Layout isHome={true}>\n        <div className=\"container\">\n          <section className=\"post-feed\">\n            <PostCard\n              key={featuredPost.node.id}\n              post={featuredPost.node}\n              featured={true}\n            />\n            {posts.map(({ node }) => (\n              // The tag below includes the markup for each post - components/common/PostCard.js\n              <PostCard key={node.id} post={node} />\n            ))}\n          </section>\n          <Pagination pageContext={pageContext} />\n        </div>\n      </Layout>\n    </>\n  );\n};\n\nIndex.propTypes = {\n  data: PropTypes.shape({\n    allGhostPost: PropTypes.object.isRequired,\n  }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n  pageContext: PropTypes.object,\n};\n\nexport default Index;\n\n// This page query loads all posts sorted descending by published date\n// The `limit` and `skip` values are used for pagination\nexport const pageQuery = graphql`\n  query GhostPostQuery($limit: Int!, $skip: Int!) {\n    allGhostPost(\n      filter: { authors: { elemMatch: { slug: { ne: \"data-schema-author\" } } } }\n      sort: { order: DESC, fields: [published_at] }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          ...GhostPostFields\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}