{"version":3,"sources":["webpack:///./src/styles/Autores.module.scss","webpack:///./src/pages/autores.js"],"names":["module","exports","Autores","data","location","authors","allGhostAuthor","edges","bodyClass","styles","main","className","content","grid","map","node","to","slug","key","id","author","src","profile_image","alt","name","pageQuery"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,KAAO,8BAA8B,QAAU,iCAAiC,KAAO,8BAA8B,OAAS,kC,kCCDhJ,mIAwCeC,UAhCC,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACjBC,EAAUF,EAAKG,eAAeC,MAEpC,OACE,oCACE,kBAAC,IAAD,CAAUH,SAAUA,IACpB,kBAAC,IAAD,CAAQI,UAAWC,IAAOC,MACxB,6BAASC,UAAWF,IAAOG,SACzB,yBAAKD,UAAU,aACb,wBAAIA,UAAU,iBAAd,YAEF,6BAASA,UAAWF,IAAOI,MACxBR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACX,kBAAC,OAAD,CACEC,GAAE,WAAaD,EAAKE,KACpBC,IAAKH,EAAKI,GACVR,UAAWF,IAAOW,QAElB,yBAAKC,IAAKN,EAAKO,cAAeC,IAAKR,EAAKS,OACxC,2BAAIT,EAAKS,eAgBlB,IAAMC,EAAS","file":"component---src-pages-autores-js-a27f487547a75a9288f4.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Autores-module--main--1oYTm\",\"content\":\"Autores-module--content--3jtau\",\"grid\":\"Autores-module--grid--3b1P1\",\"author\":\"Autores-module--author--2xy0V\"};","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { Link, graphql } from \"gatsby\";\n\nimport { Layout } from \"../components/common\";\nimport { MetaData } from \"../components/common/meta\";\nimport styles from \"../styles/Autores.module.scss\";\n\nconst Autores = ({ data, location }) => {\n  const authors = data.allGhostAuthor.edges;\n\n  return (\n    <>\n      <MetaData location={location} />\n      <Layout bodyClass={styles.main}>\n        <section className={styles.content}>\n          <div className=\"container\">\n            <h1 className=\"content-title\">Autores</h1>\n          </div>\n          <article className={styles.grid}>\n            {authors.map(({ node }) => (\n              <Link\n                to={`/author/${node.slug}`}\n                key={node.id}\n                className={styles.author}\n              >\n                <img src={node.profile_image} alt={node.name} />\n                <p>{node.name}</p>\n              </Link>\n            ))}\n          </article>\n        </section>\n      </Layout>\n    </>\n  );\n};\n\n// TODO\n// Autores.propTypes = {};\n\nexport default Autores;\n\n// TODO: make a fragment for this\nexport const pageQuery = graphql`\n  query GhostAuthorsQuery {\n    allGhostAuthor(\n      filter: { slug: { ne: \"data-schema-author\" }, postCount: { gt: 0 } }\n    ) {\n      edges {\n        node {\n          id\n          name\n          slug\n          profile_image\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}