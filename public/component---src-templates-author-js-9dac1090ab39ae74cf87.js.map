{"version":3,"sources":["webpack:///./src/templates/author.js","webpack:///./src/styles/Author.module.scss"],"names":["Author","data","location","pageContext","author","ghostAuthor","posts","allGhostPost","edges","twitterUrl","twitter","replace","facebookUrl","facebook","type","className","styles","header","style","cover_image","backgroundImage","headerWrapper","content","image","profile_image","src","alt","name","bio","meta","website","href","target","rel","length","map","node","key","id","post","pageQuery","module","exports"],"mappings":"8FAAA,mIAqHeA,UAtGA,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC1BC,EAASH,EAAKI,YACdC,EAAQL,EAAKM,aAAaC,MAC1BC,EAAaL,EAAOM,QAAP,uBACQN,EAAOM,QAAQC,QAAQ,KAAvB,IACvB,KACEC,EAAcR,EAAOS,SAAP,4BACYT,EAAOS,SAASF,QAAQ,MAAxB,IAC5B,KAEJ,OACE,oCACE,kBAAC,IAAD,CAAUV,KAAMA,EAAMC,SAAUA,EAAUY,KAAK,YAC/C,kBAAC,IAAD,KACE,4BACEC,UAAWC,IAAOC,OAClBC,MACEd,EAAOe,aAAe,CACpBC,gBAAgB,OAAQhB,EAAOe,YAAhB,MAInB,yBAAKJ,UAAWC,IAAOK,eACrB,yBAAKN,UAAS,aAAeC,IAAOM,SAClC,yBAAKP,UAAWC,IAAOO,OACpBnB,EAAOoB,cACN,yBAAKC,IAAKrB,EAAOoB,cAAeE,IAAKtB,EAAOuB,OAE5C,yBAAKF,IAAI,2BAA2BC,IAAKtB,EAAOuB,QAGpD,4BAAKvB,EAAOuB,MACXvB,EAAOwB,KAAO,2BAAIxB,EAAOwB,KAC1B,yBAAKb,UAAWC,IAAOa,MACpBzB,EAAO0B,SACN,uBACEC,KAAM3B,EAAO0B,QACbE,OAAO,SACPC,IAAI,uBAEJ,kBAAC,IAAD,OAGHxB,GACC,uBACEsB,KAAMtB,EACNuB,OAAO,SACPC,IAAI,uBAEJ,kBAAC,IAAD,OAGHrB,GACC,uBACEmB,KAAMnB,EACNoB,OAAO,SACPC,IAAI,uBAEJ,kBAAC,IAAD,QAIN,8BACG3B,EAAM4B,OADT,eAC6C,IAAjB5B,EAAM4B,OAAe,IAAM,QAK7D,yBAAKnB,UAAU,aACb,6BAASA,UAAU,aAChBT,EAAM6B,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAET,kBAAC,IAAD,CAAUC,IAAKD,EAAKE,GAAIC,KAAMH,QAGlC,kBAAC,IAAD,CAAYjC,YAAaA,QA6B5B,IAAMqC,EAAS,c,qBCtHtBC,EAAOC,QAAU,CAAC,OAAS,+BAA+B,cAAgB,sCAAsC,QAAU,gCAAgC,MAAQ,8BAA8B,KAAO","file":"component---src-templates-author-js-9dac1090ab39ae74cf87.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport { FaFacebook, FaTwitter, FaInstagram } from \"react-icons/fa\";\n\nimport { Layout, PostCard, Pagination } from \"../components/common\";\nimport { MetaData } from \"../components/common/meta\";\nimport styles from \"../styles/Author.module.scss\";\n\n/**\n * Author page (/author/:slug)\n *\n * Loads all posts for the requested author incl. pagination.\n *\n */\nconst Author = ({ data, location, pageContext }) => {\n  const author = data.ghostAuthor;\n  const posts = data.allGhostPost.edges;\n  const twitterUrl = author.twitter\n    ? `https://twitter.com/${author.twitter.replace(/^@/, ``)}`\n    : null;\n  const facebookUrl = author.facebook\n    ? `https://www.facebook.com/${author.facebook.replace(/^\\//, ``)}`\n    : null;\n\n  return (\n    <>\n      <MetaData data={data} location={location} type=\"profile\" />\n      <Layout>\n        <header\n          className={styles.header}\n          style={\n            author.cover_image && {\n              backgroundImage: `url(${author.cover_image})`,\n            }\n          }\n        >\n          <div className={styles.headerWrapper}>\n            <div className={`container ${styles.content}`}>\n              <div className={styles.image}>\n                {author.profile_image ? (\n                  <img src={author.profile_image} alt={author.name} />\n                ) : (\n                  <img src=\"/images/icons/avatar.svg\" alt={author.name} />\n                )}\n              </div>\n              <h1>{author.name}</h1>\n              {author.bio && <p>{author.bio}</p>}\n              <div className={styles.meta}>\n                {author.website && (\n                  <a\n                    href={author.website}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <FaInstagram />\n                  </a>\n                )}\n                {twitterUrl && (\n                  <a\n                    href={twitterUrl}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <FaTwitter />\n                  </a>\n                )}\n                {facebookUrl && (\n                  <a\n                    href={facebookUrl}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <FaFacebook />\n                  </a>\n                )}\n              </div>\n              <span>\n                {posts.length} {`est√≥ria${posts.length !== 1 ? \"s\" : \"\"}`}\n              </span>\n            </div>\n          </div>\n        </header>\n        <div className=\"container\">\n          <section className=\"post-feed\">\n            {posts.map(({ node }) => (\n              // The tag below includes the markup for each post - components/common/PostCard.js\n              <PostCard key={node.id} post={node} />\n            ))}\n          </section>\n          <Pagination pageContext={pageContext} />\n        </div>\n      </Layout>\n    </>\n  );\n};\n\nAuthor.propTypes = {\n  data: PropTypes.shape({\n    ghostAuthor: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      cover_image: PropTypes.string,\n      profile_image: PropTypes.string,\n      website: PropTypes.string,\n      bio: PropTypes.string,\n      location: PropTypes.string,\n      facebook: PropTypes.string,\n      twitter: PropTypes.string,\n    }),\n    allGhostPost: PropTypes.object.isRequired,\n  }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n  pageContext: PropTypes.object,\n};\n\nexport default Author;\n\nexport const pageQuery = graphql`\n  query GhostAuthorQuery($slug: String!, $limit: Int!, $skip: Int!) {\n    ghostAuthor(slug: { eq: $slug }) {\n      ...GhostAuthorFields\n    }\n    allGhostPost(\n      sort: { order: DESC, fields: [published_at] }\n      filter: { authors: { elemMatch: { slug: { eq: $slug } } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          ...GhostPostFields\n        }\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Author-module--header--2i3yN\",\"headerWrapper\":\"Author-module--headerWrapper--bswRc\",\"content\":\"Author-module--content--2jIRd\",\"image\":\"Author-module--image--3SSRG\",\"meta\":\"Author-module--meta--E57Np\"};"],"sourceRoot":""}