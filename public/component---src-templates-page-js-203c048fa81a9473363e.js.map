{"version":3,"sources":["webpack:///./src/templates/page.js"],"names":["Page","data","location","page","ghostPage","type","codeinjection_styles","className","title","dangerouslySetInnerHTML","__html","html","postQuery"],"mappings":"4FAAA,8GAoDeA,UAtCF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACdC,EAAOF,EAAKG,UAElB,OACE,oCACE,kBAAC,IAAD,CAAUH,KAAMA,EAAMC,SAAUA,EAAUG,KAAK,YAC/C,kBAAC,IAAD,KACE,2BAAOA,KAAK,YAAZ,GAA2BF,EAAKG,uBAElC,kBAAC,IAAD,KACE,yBAAKC,UAAU,aACb,6BAASA,UAAU,WACjB,wBAAIA,UAAU,iBAAiBJ,EAAKK,OAGpC,6BACED,UAAU,qCACVE,wBAAyB,CAAEC,OAAQP,EAAKQ,aAuB/C,IAAMC,EAAS","file":"component---src-templates-page-js-203c048fa81a9473363e.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\n\nimport { Layout } from \"../components/common\";\nimport { MetaData } from \"../components/common/meta\";\n\n/**\n * Single page (/:slug)\n *\n * This file renders a single page and loads all the content.\n *\n */\nconst Page = ({ data, location }) => {\n  const page = data.ghostPage;\n\n  return (\n    <>\n      <MetaData data={data} location={location} type=\"website\" />\n      <Helmet>\n        <style type=\"text/css\">{`${page.codeinjection_styles}`}</style>\n      </Helmet>\n      <Layout>\n        <div className=\"container\">\n          <article className=\"content\">\n            <h1 className=\"content-title\">{page.title}</h1>\n\n            {/* The main page content */}\n            <section\n              className=\"content-body load-external-scripts\"\n              dangerouslySetInnerHTML={{ __html: page.html }}\n            />\n          </article>\n        </div>\n      </Layout>\n    </>\n  );\n};\n\nPage.propTypes = {\n  data: PropTypes.shape({\n    ghostPage: PropTypes.shape({\n      codeinjection_styles: PropTypes.object,\n      title: PropTypes.string.isRequired,\n      html: PropTypes.string.isRequired,\n      feature_image: PropTypes.string,\n    }).isRequired,\n  }).isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default Page;\n\nexport const postQuery = graphql`\n  query($slug: String!) {\n    ghostPage(slug: { eq: $slug }) {\n      ...GhostPageFields\n    }\n  }\n`;\n"],"sourceRoot":""}